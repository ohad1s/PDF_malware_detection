import joblib
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

# Load the data into a pandas dataframe
df = pd.read_csv('../dataSet/PDFMalware2022.csv')

# Replace NaN values with the mean of the column
df.fillna(df.mean(), inplace=True)
for column in df.columns[df.isna().any()].tolist():
    # df.drop(column, axis=1, inplace=True)
    df[column] = df[column].fillna('None')
# Separate the target column from the rest of the data
y = df['Class'] # Assuming the target column is named 'encrypt'
X = df.drop('Class', axis=1)

# Handle the non-numeric columns by converting them to dummy variables
X = pd.get_dummies(X)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Fit a random forest classifier to the data
clf = RandomForestClassifier()
clf.fit(X_train, y_train)
joblib.dump(clf, 'random_forest.pkl')


# Evaluate the classifier on the test data
print("Accuracy:", clf.score(X_test, y_test))
